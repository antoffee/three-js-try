/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: phenopeia (https://sketchfab.com/phenopeia)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/heart-6cd8fdfd28d74baab3e5497105499233
title: Heart
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import * as THREE from 'three';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
    nodes: {
        Cube_1: THREE.Mesh;
    };
    materials: {
        Material: THREE.MeshStandardMaterial;
    };
};

export default function Model({ bgColor, ...props }: JSX.IntrinsicElements['group'] & { bgColor?: string }) {
    const group = useRef<THREE.Group>(null);
    const { nodes, materials } = useGLTF('/heart/heart.gltf') as GLTFResult;
    return (
        <group ref={group} {...props} dispose={null}>
            <group rotation={[-Math.PI / 2, 0, 0]}>
                <group position={[4.08, 1.01, 5.9]} rotation={[-0.27, 0.6, 1.93]} />
                <group scale={2.61}>
                    <mesh
                        geometry={nodes.Cube_1.geometry}
                        material={materials.Material}
                        material-color={bgColor ?? 'teal'}
                    />
                </group>
                <group position={[-6.48, -1.22, 6.3]} rotation={[0.02, -0.72, 0.07]} />
                <group position={[4.17, 0.43, -6.1]} />
            </group>
        </group>
    );
}

useGLTF.preload('/heart/heart.gltf');
